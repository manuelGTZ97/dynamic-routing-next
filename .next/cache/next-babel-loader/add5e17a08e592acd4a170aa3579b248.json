{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INSPIRON\\\\Documents\\\\Examples\\\\dynamic-routing-app\\\\pages\\\\users\\\\[userName]\\\\[username].js\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Header from \"../../../components/header\";\n\nvar Comment = function Comment() {\n  var router = useRouter();\n  var _router$query = router.query,\n      userName = _router$query.userName,\n      username = _router$query.username;\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Username: \", userName), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"user: \", username));\n};\n\nexport default Comment;","map":{"version":3,"sources":["C:\\Users\\INSPIRON\\Documents\\Examples\\dynamic-routing-app\\pages\\users\\[userName]\\[username].js"],"names":["useRouter","Header","Comment","router","query","userName","username"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADoB,sBAEWG,MAAM,CAACC,KAFlB;AAAA,MAEZC,QAFY,iBAEZA,QAFY;AAAA,MAEFC,QAFE,iBAEFA,QAFE;AAIpB,SACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeD,QAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,QAAX,CAHF,CADF;AAOD,CAXD;;AAaA,eAAeJ,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Header from \"../../../components/header\";\r\n\r\nconst Comment = () => {\r\n  const router = useRouter();\r\n  const { userName, username } = router.query;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <h1>Username: {userName}</h1>\r\n      <h1>user: {username}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}